plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
}

android {
    compileSdk rootProject.ext.compileSdkVersion

    defaultConfig {
        applicationId "com.mmunoz.todo"
        minSdk rootProject.ext.minSdkVersion
        targetSdk rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
}

dependencies {

    implementation "androidx.appcompat:appcompat:$rootProject.ext.appCompatVersion"
    implementation "com.google.android.material:material:$rootProject.ext.materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.ext.constraintLayoutVersion"

    // Navigation
    implementation "androidx.navigation:navigation-ui-ktx:$rootProject.ext.navigationVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$rootProject.ext.navigationVersion"

    // Dagger
    implementation "com.google.dagger:dagger:$rootProject.ext.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.ext.daggerAndroidVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.ext.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.ext.daggerVersion"

    // Epoxy
    implementation "com.airbnb.android:epoxy:$rootProject.ext.epoxyVersion"
    kapt "com.airbnb.android:epoxy-processor:$rootProject.ext.epoxyVersion"

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.ext.glideVersion"
    kapt "com.github.bumptech.glide:compiler:$rootProject.ext.glideVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$rootProject.ext.lifecycleVersion"

    // Firebase
    implementation platform("com.google.firebase:firebase-bom:$rootProject.ext.firebaseBomVersion")
    implementation "com.firebaseui:firebase-ui-database:$rootProject.ext.firebaseUiDatabaseVersion"
    implementation 'com.google.firebase:firebase-auth-ktx'
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-storage-ktx'

    // Kotlin
    implementation "androidx.core:core-ktx:$rootProject.ext.ktxCoreVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$rootProject.ext.coroutinesPlayServicesVersion"

    // Test
    testImplementation "junit:junit:$rootProject.ext.jUnitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.ext.mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$rootProject.ext.mockitoVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.2"
    testImplementation "androidx.arch.core:core-testing:$rootProject.ext.testArchCoreVersion"
    androidTestImplementation "com.android.support.test:runner:$rootProject.ext.testVersion"
    androidTestImplementation "com.android.support.test:rules:$rootProject.ext.testVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$rootProject.ext.espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$rootProject.ext.espressoVersion"
}